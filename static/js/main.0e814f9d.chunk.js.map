{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody.js","components/DataTable.js","components/SearchBox.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","react_default","a","createElement","undefined","developerState","filteredUsers","name","map","_ref","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","Fragment","DataTable","id","headings","width","style","onClick","handleSort","toLowerCase","components_DataBody","SearchBox","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","components_SearchBox","API","axios","get","DataArea","_useState","useState","users","order","_useState2","Object","slicedToArray","setDeveloperState","useEffect","then","results","objectSpread2","data","utils_DataAreaContext","Provider","value","event","console","log","filter","filteredList","item","values","indexOf","heading","sortedUsers","sort","b","localeCompare","components_Nav","length","components_DataTable","Main","components_DataArea","Component","Wrapper","children","Header","App","components_Wrapper","Header_Header","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e814f9d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DataAreaContext = React.createContext({\r\n});\r\n\r\nexport default DataAreaContext;","import React, { useContext } from \"react\";\r\nimport \"../styles/DataBody.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\"\r\n\r\nconst DataBody = () => {\r\n\r\n  const context = useContext(DataAreaContext);\r\n\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n\r\n  return (\r\n    <tbody>\r\n      {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\r\n        context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\r\n\r\n          return (\r\n            <tr key={login.uuid}>\r\n              <td data-th=\"Image\" className=\"align-middle\">\r\n                <img\r\n                  src={picture.medium}\r\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                  className=\"img-responsive\"\r\n                />\r\n              </td>\r\n              <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                {name.first} {name.last}\r\n              </td>\r\n              <td data-th=\"Phone\" className=\"align-middle\">\r\n                {phone}\r\n              </td>\r\n              <td data-th=\"Email\" className=\"align-middle\">\r\n                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                  {email}\r\n                </a>\r\n              </td>\r\n              <td data-th=\"DOB\" className=\"align-middle\">\r\n                {formatDate(dob.date)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default DataBody;\r\n","import React, { useContext } from \"react\";\r\nimport DataBody from \"./DataBody\";\r\nimport \"../styles/DataTable.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\"\r\n\r\nconst DataTable = () => {\r\n\r\n  const context = useContext(DataAreaContext);\r\n\r\n  return (\r\n    <div className=\"datatable mt-5\">\r\n      <table\r\n        id=\"table\"\r\n        className=\"table table-striped table-hover table-condensed\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {context.developerState.headings.map(({ name, width }) => {\r\n              return (\r\n                <th\r\n                  className=\"col\"\r\n                  key={name}\r\n                  style={{ width }}\r\n                  onClick={() => {\r\n                    context.handleSort(name.toLowerCase());\r\n                  }}\r\n                >\r\n                  {name}\r\n                  <span className=\"pointer\"></span>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <DataBody />\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, {useContext} from \"react\";\r\nimport \"../styles/SearchBox.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\"\r\n\r\nconst SearchBox = () => {\r\n\r\n  const context = useContext(DataAreaContext);\r\n\r\n\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <form className=\"form-inline\">\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          onChange={e => context.handleSearchChange(e)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport SearchBox from \"./SearchBox.js\";\r\nimport \"../styles/Nav.css\";\r\n\r\nfunction Nav({ handleSearchChange }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\r\n        <SearchBox handleSearchChange={handleSearchChange} />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  getUsers: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DataTable from \"./DataTable\";\r\nimport Nav from \"./Nav\";\r\nimport API from \"../utils/API\";\r\nimport \"../styles/DataArea.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nconst DataArea = () => {\r\n  const [developerState, setDeveloperState] = useState({\r\n\r\n    users: [],\r\n    order: \"ascend\",\r\n    filteredUsers: [],\r\n    headings: [\r\n      { name: \"Image\", width: \"10%\" },\r\n      { name: \"Name\", width: \"10%\" },\r\n      { name: \"Phone\", width: \"20%\" },\r\n      { name: \"Email\", width: \"20%\" },\r\n      { name: \"DOB\", width: \"10%\" }\r\n    ]\r\n  });\r\n\r\n\r\n  const handleSort = heading => {\r\n    if (developerState.order === \"descend\") {\r\n      setDeveloperState({\r\n        order: \"ascend\"\r\n      })\r\n    } else {\r\n      setDeveloperState({\r\n        order: \"descend\"\r\n      })\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (developerState.order === \"ascend\") {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else {\r\n          return a[heading] - b[heading];\r\n        }\r\n      } else {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return b[heading].first.localeCompare(a[heading].first);\r\n        } else {\r\n          return b[heading] - a[heading];\r\n        }\r\n      }\r\n\r\n    }\r\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n    setDeveloperState({ ...developerState, filteredUsers: sortedUsers });\r\n  }\r\n\r\n  const handleSearchChange = event => {\r\n    console.log(event.target.value);\r\n    const filter = event.target.value;\r\n    const filteredList = developerState.users.filter(item => {\r\n      // merge data together, then see if user input is anywhere inside\r\n      let values = Object.values(item)\r\n        .join(\"\")\r\n        .toLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n\r\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\r\n  }\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then(results => {\r\n      setDeveloperState({\r\n        ...developerState,\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results\r\n      });\r\n    });\r\n  }, [developerState]);\r\n\r\n  return (\r\n    <DataAreaContext.Provider\r\n      value={{ developerState, handleSearchChange, handleSort }}\r\n    >\r\n      <Nav />\r\n      <div className=\"data-area\">\r\n        {developerState.filteredUsers.length > 0\r\n          ? <DataTable />\r\n          : <div></div>\r\n        }\r\n      </div>\r\n    </DataAreaContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DataArea;\r\n","import React, { Component } from \"react\";\r\nimport DataArea from \"./DataArea\";\r\nimport \"../styles/Main.css\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <DataArea />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport \"../styles/Wrapper.css\";\r\n\r\nfunction Wrapper({ children }) {\r\n  return (\r\n      <div className=\"wrapper\">\r\n        { children }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from 'react';\r\nimport \"../styles/Header.css\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Employee Directory</h1>\r\n        <p>Click on carrots to filter by heading or use the search box to narrow your results.</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Main from \"./components/Main\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Wrapper>\r\n        <Header />\r\n        <Main />\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}